rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Drafts: Only allow authenticated users to read/write/update/delete drafts
    // Consider adding status checks if needed (e.g., only allow update if status is 'pending')
    match /drafts/{draftId} {
      // Only allow admins to read/write drafts
      allow read, write: if request.auth != null && request.auth.token.isAdmin == true;
      // allow create: if request.auth != null;
      // allow update, delete: if request.auth != null;
    }

    // Published Articles: Allow anyone to read, authenticated users can CUD
    match /published_articles/{articleId} {
      allow read: if true; // Anyone can read published articles
      // Explicitly allow create, update, delete for admin users only
      allow create, update, delete: if request.auth != null && request.auth.token.isAdmin == true;
    }

    // Current Config: Allow anyone to read, allow authenticated users to update
    match /current_config/live_article {
      allow read: if true;
      // Allow update only for admin users
      allow update: if request.auth != null && request.auth.token.isAdmin == true;
      // Explicitly deny create/delete for safety
      allow create, delete: if false;
    }

    // Add rules for other collections (e.g., users) if necessary
    // Example: match /users/{userId} { allow read, write: if request.auth.uid == userId; }

  }
}